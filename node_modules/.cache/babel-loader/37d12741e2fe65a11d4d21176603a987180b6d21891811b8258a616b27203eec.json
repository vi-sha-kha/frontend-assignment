{"ast":null,"code":"var _jsxFileName = \"/Users/vishakhachaudhary/Desktop/React projects/frontend-assignment/redux-cart/src/components/Searchpage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Products() {\n  _s();\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    fetch(\"https://fakestoreapi.com/products\").then(res => res.json()).then(data => setProducts(data)).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch(`https://fakestoreapi.com/products`);\n      const data = await response.json();\n      if (searchInput.trim() === \"\") {\n        setSearchResults([]);\n      } else {\n        const filteredResults = data.filter(product => product.title.toLowerCase().includes(searchInput.toLowerCase()));\n        setSearchResults(filteredResults);\n      }\n    } catch (error) {\n      console.error(\"Error fetching search results:\", error);\n    }\n  };\n  const renderCards = () => {\n    const displayProducts = searchInput ? searchResults : products;\n    if (displayProducts.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No search results found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 14\n      }, this);\n    }\n    return displayProducts.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-3\"\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchInput,\n        onChange: event => setSearchInput(event.target.value),\n        placeholder: \"Enter a product name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: renderCards()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Products, \"pMSSxRyJT/KVm6q/FoyTxJ/J1/M=\");\n_c = Products;\nexport default Products;\nvar _c;\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Products","_s","searchInput","setSearchInput","searchResults","setSearchResults","products","setProducts","fetch","then","res","json","data","catch","err","console","log","handleFormSubmit","event","preventDefault","response","trim","filteredResults","filter","product","title","toLowerCase","includes","error","renderCards","displayProducts","length","children","fileName","_jsxFileName","lineNumber","columnNumber","map","className","id","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/vishakhachaudhary/Desktop/React projects/frontend-assignment/redux-cart/src/components/Searchpage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction Products() {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://fakestoreapi.com/products\")\n      .then((res) => res.json())\n      .then((data) => setProducts(data))\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const response = await fetch(`https://fakestoreapi.com/products`);\n      const data = await response.json();\n\n      if (searchInput.trim() === \"\") {\n        setSearchResults([]);\n      } else {\n        const filteredResults = data.filter((product) =>\n          product.title.toLowerCase().includes(searchInput.toLowerCase())\n        );\n        setSearchResults(filteredResults);\n      }\n    } catch (error) {\n      console.error(\"Error fetching search results:\", error);\n    }\n  };\n  const renderCards = () => {\n    const displayProducts = searchInput ? searchResults : products;\n\n    if (displayProducts.length === 0) {\n      return <p>No search results found.</p>;\n    }\n\n    return displayProducts.map((product) => (\n      <div className=\"col-md-3\" key={product.id}>\n        {/* Card JSX */}\n      </div>\n    ));\n  };\n\n  return (\n    <>\n      <form onSubmit={handleFormSubmit}>\n        <input\n          type=\"text\"\n          value={searchInput}\n          onChange={(event) => setSearchInput(event.target.value)}\n          placeholder=\"Enter a product name\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      <div className=\"row\">{renderCards()}</div>\n    </>\n  );\n}\n\nexport default Products;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}